{
  "type": "File",
  "start": 0,
  "end": 812,
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 21,
      "column": 0
    }
  },
  "program": {
    "type": "Program",
    "start": 0,
    "end": 812,
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 21,
        "column": 0
      }
    },
    "sourceType": "module",
    "body": [
      {
        "type": "ImportDeclaration",
        "start": 0,
        "end": 30,
        "loc": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 30
          }
        },
        "specifiers": [
          {
            "type": "ImportDefaultSpecifier",
            "start": 7,
            "end": 13,
            "loc": {
              "start": {
                "line": 1,
                "column": 7
              },
              "end": {
                "line": 1,
                "column": 13
              }
            },
            "local": {
              "type": "Identifier",
              "start": 7,
              "end": 13,
              "loc": {
                "start": {
                  "line": 1,
                  "column": 7
                },
                "end": {
                  "line": 1,
                  "column": 13
                },
                "identifierName": "curryN"
              },
              "name": "curryN"
            }
          }
        ],
        "source": {
          "type": "StringLiteral",
          "start": 19,
          "end": 29,
          "loc": {
            "start": {
              "line": 1,
              "column": 19
            },
            "end": {
              "line": 1,
              "column": 29
            }
          },
          "extra": {
            "rawValue": "./curryN",
            "raw": "'./curryN'"
          },
          "value": "./curryN"
        },
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\r\n * A function wrapping calls to the two functions in an `&&` operation,\r\n * returning the result of the first function if it is false-y and the result\r\n * of the second function otherwise. Note that this is short-circuited,\r\n * meaning that the second function will not be invoked if the first returns a\r\n * false-y value.\r\n *\r\n * @param {Function} f a predicate\r\n * @param {Function} g another predicate\r\n * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\r\n * @example\r\n *\r\n *      var gt10 = x => x > 10;\r\n *      var even = x => x % 2 === 0;\r\n *      var f = both(gt10, even);\r\n *      f(100); //=> true\r\n *      f(101); //=> false\r\n ",
            "start": 32,
            "end": 734,
            "loc": {
              "start": {
                "line": 2,
                "column": 0
              },
              "end": {
                "line": 19,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportDefaultDeclaration",
        "start": 736,
        "end": 810,
        "loc": {
          "start": {
            "line": 20,
            "column": 0
          },
          "end": {
            "line": 20,
            "column": 74
          }
        },
        "declaration": {
          "type": "ArrowFunctionExpression",
          "start": 761,
          "end": 808,
          "loc": {
            "start": {
              "line": 20,
              "column": 25
            },
            "end": {
              "line": 20,
              "column": 72
            }
          },
          "id": null,
          "generator": false,
          "expression": true,
          "async": false,
          "params": [
            {
              "type": "Identifier",
              "start": 762,
              "end": 763,
              "loc": {
                "start": {
                  "line": 20,
                  "column": 26
                },
                "end": {
                  "line": 20,
                  "column": 27
                },
                "identifierName": "f"
              },
              "name": "f"
            },
            {
              "type": "Identifier",
              "start": 765,
              "end": 766,
              "loc": {
                "start": {
                  "line": 20,
                  "column": 29
                },
                "end": {
                  "line": 20,
                  "column": 30
                },
                "identifierName": "g"
              },
              "name": "g"
            }
          ],
          "body": {
            "type": "ArrowFunctionExpression",
            "start": 771,
            "end": 808,
            "loc": {
              "start": {
                "line": 20,
                "column": 35
              },
              "end": {
                "line": 20,
                "column": 72
              }
            },
            "id": null,
            "generator": false,
            "expression": true,
            "async": false,
            "params": [
              {
                "type": "RestElement",
                "start": 772,
                "end": 779,
                "loc": {
                  "start": {
                    "line": 20,
                    "column": 36
                  },
                  "end": {
                    "line": 20,
                    "column": 43
                  }
                },
                "argument": {
                  "type": "Identifier",
                  "start": 775,
                  "end": 779,
                  "loc": {
                    "start": {
                      "line": 20,
                      "column": 39
                    },
                    "end": {
                      "line": 20,
                      "column": 43
                    },
                    "identifierName": "args"
                  },
                  "name": "args"
                }
              }
            ],
            "body": {
              "type": "LogicalExpression",
              "start": 784,
              "end": 808,
              "loc": {
                "start": {
                  "line": 20,
                  "column": 48
                },
                "end": {
                  "line": 20,
                  "column": 72
                }
              },
              "left": {
                "type": "CallExpression",
                "start": 784,
                "end": 794,
                "loc": {
                  "start": {
                    "line": 20,
                    "column": 48
                  },
                  "end": {
                    "line": 20,
                    "column": 58
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 784,
                  "end": 785,
                  "loc": {
                    "start": {
                      "line": 20,
                      "column": 48
                    },
                    "end": {
                      "line": 20,
                      "column": 49
                    },
                    "identifierName": "f"
                  },
                  "name": "f"
                },
                "arguments": [
                  {
                    "type": "SpreadElement",
                    "start": 786,
                    "end": 793,
                    "loc": {
                      "start": {
                        "line": 20,
                        "column": 50
                      },
                      "end": {
                        "line": 20,
                        "column": 57
                      }
                    },
                    "argument": {
                      "type": "Identifier",
                      "start": 789,
                      "end": 793,
                      "loc": {
                        "start": {
                          "line": 20,
                          "column": 53
                        },
                        "end": {
                          "line": 20,
                          "column": 57
                        },
                        "identifierName": "args"
                      },
                      "name": "args"
                    }
                  }
                ]
              },
              "operator": "&&",
              "right": {
                "type": "CallExpression",
                "start": 798,
                "end": 808,
                "loc": {
                  "start": {
                    "line": 20,
                    "column": 62
                  },
                  "end": {
                    "line": 20,
                    "column": 72
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 798,
                  "end": 799,
                  "loc": {
                    "start": {
                      "line": 20,
                      "column": 62
                    },
                    "end": {
                      "line": 20,
                      "column": 63
                    },
                    "identifierName": "g"
                  },
                  "name": "g"
                },
                "arguments": [
                  {
                    "type": "SpreadElement",
                    "start": 800,
                    "end": 807,
                    "loc": {
                      "start": {
                        "line": 20,
                        "column": 64
                      },
                      "end": {
                        "line": 20,
                        "column": 71
                      }
                    },
                    "argument": {
                      "type": "Identifier",
                      "start": 803,
                      "end": 807,
                      "loc": {
                        "start": {
                          "line": 20,
                          "column": 67
                        },
                        "end": {
                          "line": 20,
                          "column": 71
                        },
                        "identifierName": "args"
                      },
                      "name": "args"
                    }
                  }
                ]
              }
            }
          },
          "_curryN": 2,
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\r\n * A function wrapping calls to the two functions in an `&&` operation,\r\n * returning the result of the first function if it is false-y and the result\r\n * of the second function otherwise. Note that this is short-circuited,\r\n * meaning that the second function will not be invoked if the first returns a\r\n * false-y value.\r\n *\r\n * @param {Function} f a predicate\r\n * @param {Function} g another predicate\r\n * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\r\n * @example\r\n *\r\n *      var gt10 = x => x > 10;\r\n *      var even = x => x % 2 === 0;\r\n *      var f = both(gt10, even);\r\n *      f(100); //=> true\r\n *      f(101); //=> false\r\n ",
              "start": 32,
              "end": 734,
              "loc": {
                "start": {
                  "line": 2,
                  "column": 0
                },
                "end": {
                  "line": 19,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": []
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\r\n * A function wrapping calls to the two functions in an `&&` operation,\r\n * returning the result of the first function if it is false-y and the result\r\n * of the second function otherwise. Note that this is short-circuited,\r\n * meaning that the second function will not be invoked if the first returns a\r\n * false-y value.\r\n *\r\n * @param {Function} f a predicate\r\n * @param {Function} g another predicate\r\n * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\r\n * @example\r\n *\r\n *      var gt10 = x => x > 10;\r\n *      var even = x => x % 2 === 0;\r\n *      var f = both(gt10, even);\r\n *      f(100); //=> true\r\n *      f(101); //=> false\r\n ",
            "start": 32,
            "end": 734,
            "loc": {
              "start": {
                "line": 2,
                "column": 0
              },
              "end": {
                "line": 19,
                "column": 3
              }
            }
          }
        ]
      }
    ],
    "directives": []
  },
  "comments": [
    {
      "type": "CommentBlock",
      "value": "*\r\n * A function wrapping calls to the two functions in an `&&` operation,\r\n * returning the result of the first function if it is false-y and the result\r\n * of the second function otherwise. Note that this is short-circuited,\r\n * meaning that the second function will not be invoked if the first returns a\r\n * false-y value.\r\n *\r\n * @param {Function} f a predicate\r\n * @param {Function} g another predicate\r\n * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\r\n * @example\r\n *\r\n *      var gt10 = x => x > 10;\r\n *      var even = x => x % 2 === 0;\r\n *      var f = both(gt10, even);\r\n *      f(100); //=> true\r\n *      f(101); //=> false\r\n ",
      "start": 32,
      "end": 734,
      "loc": {
        "start": {
          "line": 2,
          "column": 0
        },
        "end": {
          "line": 19,
          "column": 3
        }
      }
    }
  ],
  "tokens": [
    {
      "type": {
        "label": "import",
        "keyword": "import",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "import",
      "start": 0,
      "end": 6,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "curryN",
      "start": 7,
      "end": 13,
      "loc": {
        "start": {
          "line": 1,
          "column": 7
        },
        "end": {
          "line": 1,
          "column": 13
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "from",
      "start": 14,
      "end": 18,
      "loc": {
        "start": {
          "line": 1,
          "column": 14
        },
        "end": {
          "line": 1,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "string",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "./curryN",
      "start": 19,
      "end": 29,
      "loc": {
        "start": {
          "line": 1,
          "column": 19
        },
        "end": {
          "line": 1,
          "column": 29
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 29,
      "end": 30,
      "loc": {
        "start": {
          "line": 1,
          "column": 29
        },
        "end": {
          "line": 1,
          "column": 30
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\r\n * A function wrapping calls to the two functions in an `&&` operation,\r\n * returning the result of the first function if it is false-y and the result\r\n * of the second function otherwise. Note that this is short-circuited,\r\n * meaning that the second function will not be invoked if the first returns a\r\n * false-y value.\r\n *\r\n * @param {Function} f a predicate\r\n * @param {Function} g another predicate\r\n * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\r\n * @example\r\n *\r\n *      var gt10 = x => x > 10;\r\n *      var even = x => x % 2 === 0;\r\n *      var f = both(gt10, even);\r\n *      f(100); //=> true\r\n *      f(101); //=> false\r\n ",
      "start": 32,
      "end": 734,
      "loc": {
        "start": {
          "line": 2,
          "column": 0
        },
        "end": {
          "line": 19,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 736,
      "end": 742,
      "loc": {
        "start": {
          "line": 20,
          "column": 0
        },
        "end": {
          "line": 20,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "default",
        "keyword": "default",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "default",
      "start": 743,
      "end": 750,
      "loc": {
        "start": {
          "line": 20,
          "column": 7
        },
        "end": {
          "line": 20,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "curryN",
      "start": 751,
      "end": 757,
      "loc": {
        "start": {
          "line": 20,
          "column": 15
        },
        "end": {
          "line": 20,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 757,
      "end": 758,
      "loc": {
        "start": {
          "line": 20,
          "column": 21
        },
        "end": {
          "line": 20,
          "column": 22
        }
      }
    },
    {
      "type": {
        "label": "num",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": 2,
      "start": 758,
      "end": 759,
      "loc": {
        "start": {
          "line": 20,
          "column": 22
        },
        "end": {
          "line": 20,
          "column": 23
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 759,
      "end": 760,
      "loc": {
        "start": {
          "line": 20,
          "column": 23
        },
        "end": {
          "line": 20,
          "column": 24
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 761,
      "end": 762,
      "loc": {
        "start": {
          "line": 20,
          "column": 25
        },
        "end": {
          "line": 20,
          "column": 26
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "f",
      "start": 762,
      "end": 763,
      "loc": {
        "start": {
          "line": 20,
          "column": 26
        },
        "end": {
          "line": 20,
          "column": 27
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 763,
      "end": 764,
      "loc": {
        "start": {
          "line": 20,
          "column": 27
        },
        "end": {
          "line": 20,
          "column": 28
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "g",
      "start": 765,
      "end": 766,
      "loc": {
        "start": {
          "line": 20,
          "column": 29
        },
        "end": {
          "line": 20,
          "column": 30
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 766,
      "end": 767,
      "loc": {
        "start": {
          "line": 20,
          "column": 30
        },
        "end": {
          "line": 20,
          "column": 31
        }
      }
    },
    {
      "type": {
        "label": "=>",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 768,
      "end": 770,
      "loc": {
        "start": {
          "line": 20,
          "column": 32
        },
        "end": {
          "line": 20,
          "column": 34
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 771,
      "end": 772,
      "loc": {
        "start": {
          "line": 20,
          "column": 35
        },
        "end": {
          "line": 20,
          "column": 36
        }
      }
    },
    {
      "type": {
        "label": "...",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 772,
      "end": 775,
      "loc": {
        "start": {
          "line": 20,
          "column": 36
        },
        "end": {
          "line": 20,
          "column": 39
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "args",
      "start": 775,
      "end": 779,
      "loc": {
        "start": {
          "line": 20,
          "column": 39
        },
        "end": {
          "line": 20,
          "column": 43
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 779,
      "end": 780,
      "loc": {
        "start": {
          "line": 20,
          "column": 43
        },
        "end": {
          "line": 20,
          "column": 44
        }
      }
    },
    {
      "type": {
        "label": "=>",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 781,
      "end": 783,
      "loc": {
        "start": {
          "line": 20,
          "column": 45
        },
        "end": {
          "line": 20,
          "column": 47
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "f",
      "start": 784,
      "end": 785,
      "loc": {
        "start": {
          "line": 20,
          "column": 48
        },
        "end": {
          "line": 20,
          "column": 49
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 785,
      "end": 786,
      "loc": {
        "start": {
          "line": 20,
          "column": 49
        },
        "end": {
          "line": 20,
          "column": 50
        }
      }
    },
    {
      "type": {
        "label": "...",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 786,
      "end": 789,
      "loc": {
        "start": {
          "line": 20,
          "column": 50
        },
        "end": {
          "line": 20,
          "column": 53
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "args",
      "start": 789,
      "end": 793,
      "loc": {
        "start": {
          "line": 20,
          "column": 53
        },
        "end": {
          "line": 20,
          "column": 57
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 793,
      "end": 794,
      "loc": {
        "start": {
          "line": 20,
          "column": 57
        },
        "end": {
          "line": 20,
          "column": 58
        }
      }
    },
    {
      "type": {
        "label": "&&",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": 2,
        "updateContext": null
      },
      "value": "&&",
      "start": 795,
      "end": 797,
      "loc": {
        "start": {
          "line": 20,
          "column": 59
        },
        "end": {
          "line": 20,
          "column": 61
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "g",
      "start": 798,
      "end": 799,
      "loc": {
        "start": {
          "line": 20,
          "column": 62
        },
        "end": {
          "line": 20,
          "column": 63
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 799,
      "end": 800,
      "loc": {
        "start": {
          "line": 20,
          "column": 63
        },
        "end": {
          "line": 20,
          "column": 64
        }
      }
    },
    {
      "type": {
        "label": "...",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 800,
      "end": 803,
      "loc": {
        "start": {
          "line": 20,
          "column": 64
        },
        "end": {
          "line": 20,
          "column": 67
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "args",
      "start": 803,
      "end": 807,
      "loc": {
        "start": {
          "line": 20,
          "column": 67
        },
        "end": {
          "line": 20,
          "column": 71
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 807,
      "end": 808,
      "loc": {
        "start": {
          "line": 20,
          "column": 71
        },
        "end": {
          "line": 20,
          "column": 72
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 808,
      "end": 809,
      "loc": {
        "start": {
          "line": 20,
          "column": 72
        },
        "end": {
          "line": 20,
          "column": 73
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 809,
      "end": 810,
      "loc": {
        "start": {
          "line": 20,
          "column": 73
        },
        "end": {
          "line": 20,
          "column": 74
        }
      }
    },
    {
      "type": {
        "label": "eof",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 812,
      "end": 812,
      "loc": {
        "start": {
          "line": 21,
          "column": 0
        },
        "end": {
          "line": 21,
          "column": 0
        }
      }
    }
  ]
}