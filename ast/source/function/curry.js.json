{
  "type": "File",
  "start": 0,
  "end": 731,
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 24,
      "column": 0
    }
  },
  "program": {
    "type": "Program",
    "start": 0,
    "end": 731,
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 24,
        "column": 0
      }
    },
    "sourceType": "module",
    "body": [
      {
        "type": "ImportDeclaration",
        "start": 0,
        "end": 30,
        "loc": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 30
          }
        },
        "specifiers": [
          {
            "type": "ImportDefaultSpecifier",
            "start": 7,
            "end": 13,
            "loc": {
              "start": {
                "line": 1,
                "column": 7
              },
              "end": {
                "line": 1,
                "column": 13
              }
            },
            "local": {
              "type": "Identifier",
              "start": 7,
              "end": 13,
              "loc": {
                "start": {
                  "line": 1,
                  "column": 7
                },
                "end": {
                  "line": 1,
                  "column": 13
                },
                "identifierName": "curryN"
              },
              "name": "curryN"
            }
          }
        ],
        "source": {
          "type": "StringLiteral",
          "start": 19,
          "end": 29,
          "loc": {
            "start": {
              "line": 1,
              "column": 19
            },
            "end": {
              "line": 1,
              "column": 29
            }
          },
          "extra": {
            "rawValue": "./curryN",
            "raw": "'./curryN'"
          },
          "value": "./curryN"
        },
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\r\n * Returns a curried equivalent of the provided function. The arguments of curried function\r\n * needn't be provided one at a time. If `f` is a ternary function and `g` is `curry(f)`, the\r\n * following are equivalent:\r\n *\r\n *   - `g(1)(2)(3)`\r\n *   - `g(1)(2, 3)`\r\n *   - `g(1, 2)(3)`\r\n *   - `g(1, 2, 3)`\r\n *\r\n * @param {Function} fn The function to curry.\r\n * @return {Function} A new, curried function.\r\n * @example\r\n *\r\n *      var addFourNumbers = (a, b, c, d) => a + b + c + d;\r\n *\r\n *      var curriedAddFourNumbers = curry(addFourNumbers);\r\n *      var f = curriedAddFourNumbers(1, 2);\r\n *      var g = f(3);\r\n *      g(4); //=> 10\r\n ",
            "start": 32,
            "end": 680,
            "loc": {
              "start": {
                "line": 2,
                "column": 0
              },
              "end": {
                "line": 22,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportDefaultDeclaration",
        "start": 682,
        "end": 729,
        "loc": {
          "start": {
            "line": 23,
            "column": 0
          },
          "end": {
            "line": 23,
            "column": 47
          }
        },
        "declaration": {
          "type": "ArrowFunctionExpression",
          "start": 698,
          "end": 727,
          "loc": {
            "start": {
              "line": 23,
              "column": 16
            },
            "end": {
              "line": 23,
              "column": 45
            }
          },
          "id": null,
          "generator": false,
          "expression": true,
          "async": false,
          "params": [
            {
              "type": "Identifier",
              "start": 699,
              "end": 701,
              "loc": {
                "start": {
                  "line": 23,
                  "column": 17
                },
                "end": {
                  "line": 23,
                  "column": 19
                },
                "identifierName": "fn"
              },
              "name": "fn",
              "leadingComments": null
            }
          ],
          "body": {
            "type": "CallExpression",
            "start": 706,
            "end": 727,
            "loc": {
              "start": {
                "line": 23,
                "column": 24
              },
              "end": {
                "line": 23,
                "column": 45
              }
            },
            "callee": {
              "type": "Identifier",
              "start": 706,
              "end": 712,
              "loc": {
                "start": {
                  "line": 23,
                  "column": 24
                },
                "end": {
                  "line": 23,
                  "column": 30
                },
                "identifierName": "curryN"
              },
              "name": "curryN"
            },
            "arguments": [
              {
                "type": "MemberExpression",
                "start": 713,
                "end": 722,
                "loc": {
                  "start": {
                    "line": 23,
                    "column": 31
                  },
                  "end": {
                    "line": 23,
                    "column": 40
                  }
                },
                "object": {
                  "type": "Identifier",
                  "start": 713,
                  "end": 715,
                  "loc": {
                    "start": {
                      "line": 23,
                      "column": 31
                    },
                    "end": {
                      "line": 23,
                      "column": 33
                    },
                    "identifierName": "fn"
                  },
                  "name": "fn"
                },
                "property": {
                  "type": "Identifier",
                  "start": 716,
                  "end": 722,
                  "loc": {
                    "start": {
                      "line": 23,
                      "column": 34
                    },
                    "end": {
                      "line": 23,
                      "column": 40
                    },
                    "identifierName": "length"
                  },
                  "name": "length"
                },
                "computed": false
              },
              {
                "type": "Identifier",
                "start": 724,
                "end": 726,
                "loc": {
                  "start": {
                    "line": 23,
                    "column": 42
                  },
                  "end": {
                    "line": 23,
                    "column": 44
                  },
                  "identifierName": "fn"
                },
                "name": "fn"
              }
            ]
          },
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\r\n * Returns a curried equivalent of the provided function. The arguments of curried function\r\n * needn't be provided one at a time. If `f` is a ternary function and `g` is `curry(f)`, the\r\n * following are equivalent:\r\n *\r\n *   - `g(1)(2)(3)`\r\n *   - `g(1)(2, 3)`\r\n *   - `g(1, 2)(3)`\r\n *   - `g(1, 2, 3)`\r\n *\r\n * @param {Function} fn The function to curry.\r\n * @return {Function} A new, curried function.\r\n * @example\r\n *\r\n *      var addFourNumbers = (a, b, c, d) => a + b + c + d;\r\n *\r\n *      var curriedAddFourNumbers = curry(addFourNumbers);\r\n *      var f = curriedAddFourNumbers(1, 2);\r\n *      var g = f(3);\r\n *      g(4); //=> 10\r\n ",
              "start": 32,
              "end": 680,
              "loc": {
                "start": {
                  "line": 2,
                  "column": 0
                },
                "end": {
                  "line": 22,
                  "column": 3
                }
              }
            }
          ],
          "extra": {
            "parenthesized": true,
            "parenStart": 697
          },
          "trailingComments": []
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\r\n * Returns a curried equivalent of the provided function. The arguments of curried function\r\n * needn't be provided one at a time. If `f` is a ternary function and `g` is `curry(f)`, the\r\n * following are equivalent:\r\n *\r\n *   - `g(1)(2)(3)`\r\n *   - `g(1)(2, 3)`\r\n *   - `g(1, 2)(3)`\r\n *   - `g(1, 2, 3)`\r\n *\r\n * @param {Function} fn The function to curry.\r\n * @return {Function} A new, curried function.\r\n * @example\r\n *\r\n *      var addFourNumbers = (a, b, c, d) => a + b + c + d;\r\n *\r\n *      var curriedAddFourNumbers = curry(addFourNumbers);\r\n *      var f = curriedAddFourNumbers(1, 2);\r\n *      var g = f(3);\r\n *      g(4); //=> 10\r\n ",
            "start": 32,
            "end": 680,
            "loc": {
              "start": {
                "line": 2,
                "column": 0
              },
              "end": {
                "line": 22,
                "column": 3
              }
            }
          }
        ]
      }
    ],
    "directives": []
  },
  "comments": [
    {
      "type": "CommentBlock",
      "value": "*\r\n * Returns a curried equivalent of the provided function. The arguments of curried function\r\n * needn't be provided one at a time. If `f` is a ternary function and `g` is `curry(f)`, the\r\n * following are equivalent:\r\n *\r\n *   - `g(1)(2)(3)`\r\n *   - `g(1)(2, 3)`\r\n *   - `g(1, 2)(3)`\r\n *   - `g(1, 2, 3)`\r\n *\r\n * @param {Function} fn The function to curry.\r\n * @return {Function} A new, curried function.\r\n * @example\r\n *\r\n *      var addFourNumbers = (a, b, c, d) => a + b + c + d;\r\n *\r\n *      var curriedAddFourNumbers = curry(addFourNumbers);\r\n *      var f = curriedAddFourNumbers(1, 2);\r\n *      var g = f(3);\r\n *      g(4); //=> 10\r\n ",
      "start": 32,
      "end": 680,
      "loc": {
        "start": {
          "line": 2,
          "column": 0
        },
        "end": {
          "line": 22,
          "column": 3
        }
      }
    }
  ],
  "tokens": [
    {
      "type": {
        "label": "import",
        "keyword": "import",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "import",
      "start": 0,
      "end": 6,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "curryN",
      "start": 7,
      "end": 13,
      "loc": {
        "start": {
          "line": 1,
          "column": 7
        },
        "end": {
          "line": 1,
          "column": 13
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "from",
      "start": 14,
      "end": 18,
      "loc": {
        "start": {
          "line": 1,
          "column": 14
        },
        "end": {
          "line": 1,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "string",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "./curryN",
      "start": 19,
      "end": 29,
      "loc": {
        "start": {
          "line": 1,
          "column": 19
        },
        "end": {
          "line": 1,
          "column": 29
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 29,
      "end": 30,
      "loc": {
        "start": {
          "line": 1,
          "column": 29
        },
        "end": {
          "line": 1,
          "column": 30
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\r\n * Returns a curried equivalent of the provided function. The arguments of curried function\r\n * needn't be provided one at a time. If `f` is a ternary function and `g` is `curry(f)`, the\r\n * following are equivalent:\r\n *\r\n *   - `g(1)(2)(3)`\r\n *   - `g(1)(2, 3)`\r\n *   - `g(1, 2)(3)`\r\n *   - `g(1, 2, 3)`\r\n *\r\n * @param {Function} fn The function to curry.\r\n * @return {Function} A new, curried function.\r\n * @example\r\n *\r\n *      var addFourNumbers = (a, b, c, d) => a + b + c + d;\r\n *\r\n *      var curriedAddFourNumbers = curry(addFourNumbers);\r\n *      var f = curriedAddFourNumbers(1, 2);\r\n *      var g = f(3);\r\n *      g(4); //=> 10\r\n ",
      "start": 32,
      "end": 680,
      "loc": {
        "start": {
          "line": 2,
          "column": 0
        },
        "end": {
          "line": 22,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 682,
      "end": 688,
      "loc": {
        "start": {
          "line": 23,
          "column": 0
        },
        "end": {
          "line": 23,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "default",
        "keyword": "default",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "default",
      "start": 689,
      "end": 696,
      "loc": {
        "start": {
          "line": 23,
          "column": 7
        },
        "end": {
          "line": 23,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 697,
      "end": 698,
      "loc": {
        "start": {
          "line": 23,
          "column": 15
        },
        "end": {
          "line": 23,
          "column": 16
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 698,
      "end": 699,
      "loc": {
        "start": {
          "line": 23,
          "column": 16
        },
        "end": {
          "line": 23,
          "column": 17
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "fn",
      "start": 699,
      "end": 701,
      "loc": {
        "start": {
          "line": 23,
          "column": 17
        },
        "end": {
          "line": 23,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 701,
      "end": 702,
      "loc": {
        "start": {
          "line": 23,
          "column": 19
        },
        "end": {
          "line": 23,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "=>",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 703,
      "end": 705,
      "loc": {
        "start": {
          "line": 23,
          "column": 21
        },
        "end": {
          "line": 23,
          "column": 23
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "curryN",
      "start": 706,
      "end": 712,
      "loc": {
        "start": {
          "line": 23,
          "column": 24
        },
        "end": {
          "line": 23,
          "column": 30
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 712,
      "end": 713,
      "loc": {
        "start": {
          "line": 23,
          "column": 30
        },
        "end": {
          "line": 23,
          "column": 31
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "fn",
      "start": 713,
      "end": 715,
      "loc": {
        "start": {
          "line": 23,
          "column": 31
        },
        "end": {
          "line": 23,
          "column": 33
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 715,
      "end": 716,
      "loc": {
        "start": {
          "line": 23,
          "column": 33
        },
        "end": {
          "line": 23,
          "column": 34
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "length",
      "start": 716,
      "end": 722,
      "loc": {
        "start": {
          "line": 23,
          "column": 34
        },
        "end": {
          "line": 23,
          "column": 40
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 722,
      "end": 723,
      "loc": {
        "start": {
          "line": 23,
          "column": 40
        },
        "end": {
          "line": 23,
          "column": 41
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "fn",
      "start": 724,
      "end": 726,
      "loc": {
        "start": {
          "line": 23,
          "column": 42
        },
        "end": {
          "line": 23,
          "column": 44
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 726,
      "end": 727,
      "loc": {
        "start": {
          "line": 23,
          "column": 44
        },
        "end": {
          "line": 23,
          "column": 45
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 727,
      "end": 728,
      "loc": {
        "start": {
          "line": 23,
          "column": 45
        },
        "end": {
          "line": 23,
          "column": 46
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 728,
      "end": 729,
      "loc": {
        "start": {
          "line": 23,
          "column": 46
        },
        "end": {
          "line": 23,
          "column": 47
        }
      }
    },
    {
      "type": {
        "label": "eof",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 731,
      "end": 731,
      "loc": {
        "start": {
          "line": 24,
          "column": 0
        },
        "end": {
          "line": 24,
          "column": 0
        }
      }
    }
  ]
}