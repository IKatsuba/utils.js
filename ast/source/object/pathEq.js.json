{
  "type": "File",
  "start": 0,
  "end": 866,
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 21,
      "column": 0
    }
  },
  "program": {
    "type": "Program",
    "start": 0,
    "end": 866,
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 21,
        "column": 0
      }
    },
    "sourceType": "module",
    "body": [
      {
        "type": "ImportDeclaration",
        "start": 0,
        "end": 40,
        "loc": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 40
          }
        },
        "specifiers": [
          {
            "type": "ImportDefaultSpecifier",
            "start": 7,
            "end": 13,
            "loc": {
              "start": {
                "line": 1,
                "column": 7
              },
              "end": {
                "line": 1,
                "column": 13
              }
            },
            "local": {
              "type": "Identifier",
              "start": 7,
              "end": 13,
              "loc": {
                "start": {
                  "line": 1,
                  "column": 7
                },
                "end": {
                  "line": 1,
                  "column": 13
                },
                "identifierName": "curryN"
              },
              "name": "curryN"
            }
          }
        ],
        "source": {
          "type": "StringLiteral",
          "start": 19,
          "end": 39,
          "loc": {
            "start": {
              "line": 1,
              "column": 19
            },
            "end": {
              "line": 1,
              "column": 39
            }
          },
          "extra": {
            "rawValue": "../function/curryN",
            "raw": "'../function/curryN'"
          },
          "value": "../function/curryN"
        }
      },
      {
        "type": "ImportDeclaration",
        "start": 42,
        "end": 68,
        "loc": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 26
          }
        },
        "specifiers": [
          {
            "type": "ImportDefaultSpecifier",
            "start": 49,
            "end": 53,
            "loc": {
              "start": {
                "line": 2,
                "column": 7
              },
              "end": {
                "line": 2,
                "column": 11
              }
            },
            "local": {
              "type": "Identifier",
              "start": 49,
              "end": 53,
              "loc": {
                "start": {
                  "line": 2,
                  "column": 7
                },
                "end": {
                  "line": 2,
                  "column": 11
                },
                "identifierName": "path"
              },
              "name": "path"
            }
          }
        ],
        "source": {
          "type": "StringLiteral",
          "start": 59,
          "end": 67,
          "loc": {
            "start": {
              "line": 2,
              "column": 17
            },
            "end": {
              "line": 2,
              "column": 25
            }
          },
          "extra": {
            "rawValue": "./path",
            "raw": "'./path'"
          },
          "value": "./path"
        },
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\r\n * Determines whether a nested path on an object has a specific value\r\n *\r\n * @param {Array} paths The path of the nested property to use\r\n * @param {*} value The value to compare the nested property with\r\n * @param {Object} obj The object to check the nested property in\r\n * @return {Boolean} `true` if the value is the nested object property,\r\n *         `false` otherwise.\r\n * @example\r\n *\r\n *      var user1 = { address: { zipCode: 90210 } };\r\n *      var user2 = { address: { zipCode: 55555 } };\r\n *      var user3 = { name: 'Bob' };\r\n *      var users = [ user1, user2, user3 ];\r\n *      var isFamous = pathEq(['address', 'zipCode'], 90210);\r\n *      filter(isFamous, users); //=> [ user1 ]\r\n ",
            "start": 70,
            "end": 776,
            "loc": {
              "start": {
                "line": 3,
                "column": 0
              },
              "end": {
                "line": 19,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportDefaultDeclaration",
        "start": 778,
        "end": 864,
        "loc": {
          "start": {
            "line": 20,
            "column": 0
          },
          "end": {
            "line": 20,
            "column": 86
          }
        },
        "declaration": {
          "type": "ArrowFunctionExpression",
          "start": 803,
          "end": 862,
          "loc": {
            "start": {
              "line": 20,
              "column": 25
            },
            "end": {
              "line": 20,
              "column": 84
            }
          },
          "id": null,
          "generator": false,
          "expression": true,
          "async": false,
          "params": [
            {
              "type": "AssignmentPattern",
              "start": 804,
              "end": 814,
              "loc": {
                "start": {
                  "line": 20,
                  "column": 26
                },
                "end": {
                  "line": 20,
                  "column": 36
                }
              },
              "left": {
                "type": "Identifier",
                "start": 804,
                "end": 809,
                "loc": {
                  "start": {
                    "line": 20,
                    "column": 26
                  },
                  "end": {
                    "line": 20,
                    "column": 31
                  },
                  "identifierName": "paths"
                },
                "name": "paths"
              },
              "right": {
                "type": "ArrayExpression",
                "start": 812,
                "end": 814,
                "loc": {
                  "start": {
                    "line": 20,
                    "column": 34
                  },
                  "end": {
                    "line": 20,
                    "column": 36
                  }
                },
                "elements": []
              }
            },
            {
              "type": "Identifier",
              "start": 816,
              "end": 821,
              "loc": {
                "start": {
                  "line": 20,
                  "column": 38
                },
                "end": {
                  "line": 20,
                  "column": 43
                },
                "identifierName": "value"
              },
              "name": "value"
            },
            {
              "type": "AssignmentPattern",
              "start": 823,
              "end": 831,
              "loc": {
                "start": {
                  "line": 20,
                  "column": 45
                },
                "end": {
                  "line": 20,
                  "column": 53
                }
              },
              "left": {
                "type": "Identifier",
                "start": 823,
                "end": 826,
                "loc": {
                  "start": {
                    "line": 20,
                    "column": 45
                  },
                  "end": {
                    "line": 20,
                    "column": 48
                  },
                  "identifierName": "obj"
                },
                "name": "obj"
              },
              "right": {
                "type": "ObjectExpression",
                "start": 829,
                "end": 831,
                "loc": {
                  "start": {
                    "line": 20,
                    "column": 51
                  },
                  "end": {
                    "line": 20,
                    "column": 53
                  }
                },
                "properties": []
              }
            }
          ],
          "body": {
            "type": "BinaryExpression",
            "start": 836,
            "end": 862,
            "loc": {
              "start": {
                "line": 20,
                "column": 58
              },
              "end": {
                "line": 20,
                "column": 84
              }
            },
            "left": {
              "type": "CallExpression",
              "start": 836,
              "end": 852,
              "loc": {
                "start": {
                  "line": 20,
                  "column": 58
                },
                "end": {
                  "line": 20,
                  "column": 74
                }
              },
              "callee": {
                "type": "Identifier",
                "start": 836,
                "end": 840,
                "loc": {
                  "start": {
                    "line": 20,
                    "column": 58
                  },
                  "end": {
                    "line": 20,
                    "column": 62
                  },
                  "identifierName": "path"
                },
                "name": "path"
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "start": 841,
                  "end": 846,
                  "loc": {
                    "start": {
                      "line": 20,
                      "column": 63
                    },
                    "end": {
                      "line": 20,
                      "column": 68
                    },
                    "identifierName": "paths"
                  },
                  "name": "paths"
                },
                {
                  "type": "Identifier",
                  "start": 848,
                  "end": 851,
                  "loc": {
                    "start": {
                      "line": 20,
                      "column": 70
                    },
                    "end": {
                      "line": 20,
                      "column": 73
                    },
                    "identifierName": "obj"
                  },
                  "name": "obj"
                }
              ]
            },
            "operator": "===",
            "right": {
              "type": "Identifier",
              "start": 857,
              "end": 862,
              "loc": {
                "start": {
                  "line": 20,
                  "column": 79
                },
                "end": {
                  "line": 20,
                  "column": 84
                },
                "identifierName": "value"
              },
              "name": "value"
            }
          },
          "_curryN": 3,
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\r\n * Determines whether a nested path on an object has a specific value\r\n *\r\n * @param {Array} paths The path of the nested property to use\r\n * @param {*} value The value to compare the nested property with\r\n * @param {Object} obj The object to check the nested property in\r\n * @return {Boolean} `true` if the value is the nested object property,\r\n *         `false` otherwise.\r\n * @example\r\n *\r\n *      var user1 = { address: { zipCode: 90210 } };\r\n *      var user2 = { address: { zipCode: 55555 } };\r\n *      var user3 = { name: 'Bob' };\r\n *      var users = [ user1, user2, user3 ];\r\n *      var isFamous = pathEq(['address', 'zipCode'], 90210);\r\n *      filter(isFamous, users); //=> [ user1 ]\r\n ",
              "start": 70,
              "end": 776,
              "loc": {
                "start": {
                  "line": 3,
                  "column": 0
                },
                "end": {
                  "line": 19,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": []
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\r\n * Determines whether a nested path on an object has a specific value\r\n *\r\n * @param {Array} paths The path of the nested property to use\r\n * @param {*} value The value to compare the nested property with\r\n * @param {Object} obj The object to check the nested property in\r\n * @return {Boolean} `true` if the value is the nested object property,\r\n *         `false` otherwise.\r\n * @example\r\n *\r\n *      var user1 = { address: { zipCode: 90210 } };\r\n *      var user2 = { address: { zipCode: 55555 } };\r\n *      var user3 = { name: 'Bob' };\r\n *      var users = [ user1, user2, user3 ];\r\n *      var isFamous = pathEq(['address', 'zipCode'], 90210);\r\n *      filter(isFamous, users); //=> [ user1 ]\r\n ",
            "start": 70,
            "end": 776,
            "loc": {
              "start": {
                "line": 3,
                "column": 0
              },
              "end": {
                "line": 19,
                "column": 3
              }
            }
          }
        ]
      }
    ],
    "directives": []
  },
  "comments": [
    {
      "type": "CommentBlock",
      "value": "*\r\n * Determines whether a nested path on an object has a specific value\r\n *\r\n * @param {Array} paths The path of the nested property to use\r\n * @param {*} value The value to compare the nested property with\r\n * @param {Object} obj The object to check the nested property in\r\n * @return {Boolean} `true` if the value is the nested object property,\r\n *         `false` otherwise.\r\n * @example\r\n *\r\n *      var user1 = { address: { zipCode: 90210 } };\r\n *      var user2 = { address: { zipCode: 55555 } };\r\n *      var user3 = { name: 'Bob' };\r\n *      var users = [ user1, user2, user3 ];\r\n *      var isFamous = pathEq(['address', 'zipCode'], 90210);\r\n *      filter(isFamous, users); //=> [ user1 ]\r\n ",
      "start": 70,
      "end": 776,
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 19,
          "column": 3
        }
      }
    }
  ],
  "tokens": [
    {
      "type": {
        "label": "import",
        "keyword": "import",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "import",
      "start": 0,
      "end": 6,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "curryN",
      "start": 7,
      "end": 13,
      "loc": {
        "start": {
          "line": 1,
          "column": 7
        },
        "end": {
          "line": 1,
          "column": 13
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "from",
      "start": 14,
      "end": 18,
      "loc": {
        "start": {
          "line": 1,
          "column": 14
        },
        "end": {
          "line": 1,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "string",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "../function/curryN",
      "start": 19,
      "end": 39,
      "loc": {
        "start": {
          "line": 1,
          "column": 19
        },
        "end": {
          "line": 1,
          "column": 39
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 39,
      "end": 40,
      "loc": {
        "start": {
          "line": 1,
          "column": 39
        },
        "end": {
          "line": 1,
          "column": 40
        }
      }
    },
    {
      "type": {
        "label": "import",
        "keyword": "import",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "import",
      "start": 42,
      "end": 48,
      "loc": {
        "start": {
          "line": 2,
          "column": 0
        },
        "end": {
          "line": 2,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "path",
      "start": 49,
      "end": 53,
      "loc": {
        "start": {
          "line": 2,
          "column": 7
        },
        "end": {
          "line": 2,
          "column": 11
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "from",
      "start": 54,
      "end": 58,
      "loc": {
        "start": {
          "line": 2,
          "column": 12
        },
        "end": {
          "line": 2,
          "column": 16
        }
      }
    },
    {
      "type": {
        "label": "string",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "./path",
      "start": 59,
      "end": 67,
      "loc": {
        "start": {
          "line": 2,
          "column": 17
        },
        "end": {
          "line": 2,
          "column": 25
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 67,
      "end": 68,
      "loc": {
        "start": {
          "line": 2,
          "column": 25
        },
        "end": {
          "line": 2,
          "column": 26
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\r\n * Determines whether a nested path on an object has a specific value\r\n *\r\n * @param {Array} paths The path of the nested property to use\r\n * @param {*} value The value to compare the nested property with\r\n * @param {Object} obj The object to check the nested property in\r\n * @return {Boolean} `true` if the value is the nested object property,\r\n *         `false` otherwise.\r\n * @example\r\n *\r\n *      var user1 = { address: { zipCode: 90210 } };\r\n *      var user2 = { address: { zipCode: 55555 } };\r\n *      var user3 = { name: 'Bob' };\r\n *      var users = [ user1, user2, user3 ];\r\n *      var isFamous = pathEq(['address', 'zipCode'], 90210);\r\n *      filter(isFamous, users); //=> [ user1 ]\r\n ",
      "start": 70,
      "end": 776,
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 19,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 778,
      "end": 784,
      "loc": {
        "start": {
          "line": 20,
          "column": 0
        },
        "end": {
          "line": 20,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "default",
        "keyword": "default",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "default",
      "start": 785,
      "end": 792,
      "loc": {
        "start": {
          "line": 20,
          "column": 7
        },
        "end": {
          "line": 20,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "curryN",
      "start": 793,
      "end": 799,
      "loc": {
        "start": {
          "line": 20,
          "column": 15
        },
        "end": {
          "line": 20,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 799,
      "end": 800,
      "loc": {
        "start": {
          "line": 20,
          "column": 21
        },
        "end": {
          "line": 20,
          "column": 22
        }
      }
    },
    {
      "type": {
        "label": "num",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": 3,
      "start": 800,
      "end": 801,
      "loc": {
        "start": {
          "line": 20,
          "column": 22
        },
        "end": {
          "line": 20,
          "column": 23
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 801,
      "end": 802,
      "loc": {
        "start": {
          "line": 20,
          "column": 23
        },
        "end": {
          "line": 20,
          "column": 24
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 803,
      "end": 804,
      "loc": {
        "start": {
          "line": 20,
          "column": 25
        },
        "end": {
          "line": 20,
          "column": 26
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "paths",
      "start": 804,
      "end": 809,
      "loc": {
        "start": {
          "line": 20,
          "column": 26
        },
        "end": {
          "line": 20,
          "column": 31
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 810,
      "end": 811,
      "loc": {
        "start": {
          "line": 20,
          "column": 32
        },
        "end": {
          "line": 20,
          "column": 33
        }
      }
    },
    {
      "type": {
        "label": "[",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 812,
      "end": 813,
      "loc": {
        "start": {
          "line": 20,
          "column": 34
        },
        "end": {
          "line": 20,
          "column": 35
        }
      }
    },
    {
      "type": {
        "label": "]",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 813,
      "end": 814,
      "loc": {
        "start": {
          "line": 20,
          "column": 35
        },
        "end": {
          "line": 20,
          "column": 36
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 814,
      "end": 815,
      "loc": {
        "start": {
          "line": 20,
          "column": 36
        },
        "end": {
          "line": 20,
          "column": 37
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "value",
      "start": 816,
      "end": 821,
      "loc": {
        "start": {
          "line": 20,
          "column": 38
        },
        "end": {
          "line": 20,
          "column": 43
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 821,
      "end": 822,
      "loc": {
        "start": {
          "line": 20,
          "column": 43
        },
        "end": {
          "line": 20,
          "column": 44
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "obj",
      "start": 823,
      "end": 826,
      "loc": {
        "start": {
          "line": 20,
          "column": 45
        },
        "end": {
          "line": 20,
          "column": 48
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 827,
      "end": 828,
      "loc": {
        "start": {
          "line": 20,
          "column": 49
        },
        "end": {
          "line": 20,
          "column": 50
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 829,
      "end": 830,
      "loc": {
        "start": {
          "line": 20,
          "column": 51
        },
        "end": {
          "line": 20,
          "column": 52
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 830,
      "end": 831,
      "loc": {
        "start": {
          "line": 20,
          "column": 52
        },
        "end": {
          "line": 20,
          "column": 53
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 831,
      "end": 832,
      "loc": {
        "start": {
          "line": 20,
          "column": 53
        },
        "end": {
          "line": 20,
          "column": 54
        }
      }
    },
    {
      "type": {
        "label": "=>",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 833,
      "end": 835,
      "loc": {
        "start": {
          "line": 20,
          "column": 55
        },
        "end": {
          "line": 20,
          "column": 57
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "path",
      "start": 836,
      "end": 840,
      "loc": {
        "start": {
          "line": 20,
          "column": 58
        },
        "end": {
          "line": 20,
          "column": 62
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 840,
      "end": 841,
      "loc": {
        "start": {
          "line": 20,
          "column": 62
        },
        "end": {
          "line": 20,
          "column": 63
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "paths",
      "start": 841,
      "end": 846,
      "loc": {
        "start": {
          "line": 20,
          "column": 63
        },
        "end": {
          "line": 20,
          "column": 68
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 846,
      "end": 847,
      "loc": {
        "start": {
          "line": 20,
          "column": 68
        },
        "end": {
          "line": 20,
          "column": 69
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "obj",
      "start": 848,
      "end": 851,
      "loc": {
        "start": {
          "line": 20,
          "column": 70
        },
        "end": {
          "line": 20,
          "column": 73
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 851,
      "end": 852,
      "loc": {
        "start": {
          "line": 20,
          "column": 73
        },
        "end": {
          "line": 20,
          "column": 74
        }
      }
    },
    {
      "type": {
        "label": "==/!=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": 6,
        "updateContext": null
      },
      "value": "===",
      "start": 853,
      "end": 856,
      "loc": {
        "start": {
          "line": 20,
          "column": 75
        },
        "end": {
          "line": 20,
          "column": 78
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "value",
      "start": 857,
      "end": 862,
      "loc": {
        "start": {
          "line": 20,
          "column": 79
        },
        "end": {
          "line": 20,
          "column": 84
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 862,
      "end": 863,
      "loc": {
        "start": {
          "line": 20,
          "column": 84
        },
        "end": {
          "line": 20,
          "column": 85
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 863,
      "end": 864,
      "loc": {
        "start": {
          "line": 20,
          "column": 85
        },
        "end": {
          "line": 20,
          "column": 86
        }
      }
    },
    {
      "type": {
        "label": "eof",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 866,
      "end": 866,
      "loc": {
        "start": {
          "line": 21,
          "column": 0
        },
        "end": {
          "line": 21,
          "column": 0
        }
      }
    }
  ]
}