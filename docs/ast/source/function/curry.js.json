{
  "type": "File",
  "start": 0,
  "end": 705,
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 25,
      "column": 0
    }
  },
  "program": {
    "type": "Program",
    "start": 0,
    "end": 705,
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 25,
        "column": 0
      }
    },
    "sourceType": "module",
    "body": [
      {
        "type": "ImportDeclaration",
        "start": 0,
        "end": 30,
        "loc": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 30
          }
        },
        "specifiers": [
          {
            "type": "ImportDefaultSpecifier",
            "start": 7,
            "end": 13,
            "loc": {
              "start": {
                "line": 1,
                "column": 7
              },
              "end": {
                "line": 1,
                "column": 13
              }
            },
            "local": {
              "type": "Identifier",
              "start": 7,
              "end": 13,
              "loc": {
                "start": {
                  "line": 1,
                  "column": 7
                },
                "end": {
                  "line": 1,
                  "column": 13
                },
                "identifierName": "curryN"
              },
              "name": "curryN"
            }
          }
        ],
        "source": {
          "type": "StringLiteral",
          "start": 19,
          "end": 29,
          "loc": {
            "start": {
              "line": 1,
              "column": 19
            },
            "end": {
              "line": 1,
              "column": 29
            }
          },
          "extra": {
            "rawValue": "./curryN",
            "raw": "'./curryN'"
          },
          "value": "./curryN"
        },
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Returns a curried equivalent of the provided function. The arguments of curried function\n * needn't be provided one at a time. If `f` is a ternary function and `g` is `curry(f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @example\n *\n *      var addFourNumbers = (a, b, c, d) => a + b + c + d;\n *\n *      var curriedAddFourNumbers = curry(addFourNumbers);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n ",
            "start": 32,
            "end": 660,
            "loc": {
              "start": {
                "line": 3,
                "column": 0
              },
              "end": {
                "line": 23,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportDefaultDeclaration",
        "start": 661,
        "end": 704,
        "loc": {
          "start": {
            "line": 24,
            "column": 0
          },
          "end": {
            "line": 24,
            "column": 43
          }
        },
        "declaration": {
          "type": "ArrowFunctionExpression",
          "start": 676,
          "end": 703,
          "loc": {
            "start": {
              "line": 24,
              "column": 15
            },
            "end": {
              "line": 24,
              "column": 42
            }
          },
          "id": null,
          "generator": false,
          "expression": true,
          "async": false,
          "params": [
            {
              "type": "Identifier",
              "start": 676,
              "end": 678,
              "loc": {
                "start": {
                  "line": 24,
                  "column": 15
                },
                "end": {
                  "line": 24,
                  "column": 17
                },
                "identifierName": "fn"
              },
              "name": "fn",
              "leadingComments": null
            }
          ],
          "body": {
            "type": "CallExpression",
            "start": 682,
            "end": 703,
            "loc": {
              "start": {
                "line": 24,
                "column": 21
              },
              "end": {
                "line": 24,
                "column": 42
              }
            },
            "callee": {
              "type": "Identifier",
              "start": 682,
              "end": 688,
              "loc": {
                "start": {
                  "line": 24,
                  "column": 21
                },
                "end": {
                  "line": 24,
                  "column": 27
                },
                "identifierName": "curryN"
              },
              "name": "curryN"
            },
            "arguments": [
              {
                "type": "MemberExpression",
                "start": 689,
                "end": 698,
                "loc": {
                  "start": {
                    "line": 24,
                    "column": 28
                  },
                  "end": {
                    "line": 24,
                    "column": 37
                  }
                },
                "object": {
                  "type": "Identifier",
                  "start": 689,
                  "end": 691,
                  "loc": {
                    "start": {
                      "line": 24,
                      "column": 28
                    },
                    "end": {
                      "line": 24,
                      "column": 30
                    },
                    "identifierName": "fn"
                  },
                  "name": "fn"
                },
                "property": {
                  "type": "Identifier",
                  "start": 692,
                  "end": 698,
                  "loc": {
                    "start": {
                      "line": 24,
                      "column": 31
                    },
                    "end": {
                      "line": 24,
                      "column": 37
                    },
                    "identifierName": "length"
                  },
                  "name": "length"
                },
                "computed": false
              },
              {
                "type": "Identifier",
                "start": 700,
                "end": 702,
                "loc": {
                  "start": {
                    "line": 24,
                    "column": 39
                  },
                  "end": {
                    "line": 24,
                    "column": 41
                  },
                  "identifierName": "fn"
                },
                "name": "fn"
              }
            ]
          },
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Returns a curried equivalent of the provided function. The arguments of curried function\n * needn't be provided one at a time. If `f` is a ternary function and `g` is `curry(f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @example\n *\n *      var addFourNumbers = (a, b, c, d) => a + b + c + d;\n *\n *      var curriedAddFourNumbers = curry(addFourNumbers);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n ",
              "start": 32,
              "end": 660,
              "loc": {
                "start": {
                  "line": 3,
                  "column": 0
                },
                "end": {
                  "line": 23,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": []
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Returns a curried equivalent of the provided function. The arguments of curried function\n * needn't be provided one at a time. If `f` is a ternary function and `g` is `curry(f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @example\n *\n *      var addFourNumbers = (a, b, c, d) => a + b + c + d;\n *\n *      var curriedAddFourNumbers = curry(addFourNumbers);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n ",
            "start": 32,
            "end": 660,
            "loc": {
              "start": {
                "line": 3,
                "column": 0
              },
              "end": {
                "line": 23,
                "column": 3
              }
            }
          }
        ]
      }
    ],
    "directives": []
  },
  "comments": [
    {
      "type": "CommentBlock",
      "value": "*\n * Returns a curried equivalent of the provided function. The arguments of curried function\n * needn't be provided one at a time. If `f` is a ternary function and `g` is `curry(f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @example\n *\n *      var addFourNumbers = (a, b, c, d) => a + b + c + d;\n *\n *      var curriedAddFourNumbers = curry(addFourNumbers);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n ",
      "start": 32,
      "end": 660,
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 23,
          "column": 3
        }
      }
    }
  ],
  "tokens": [
    {
      "type": {
        "label": "import",
        "keyword": "import",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "import",
      "start": 0,
      "end": 6,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "curryN",
      "start": 7,
      "end": 13,
      "loc": {
        "start": {
          "line": 1,
          "column": 7
        },
        "end": {
          "line": 1,
          "column": 13
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "from",
      "start": 14,
      "end": 18,
      "loc": {
        "start": {
          "line": 1,
          "column": 14
        },
        "end": {
          "line": 1,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "string",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "./curryN",
      "start": 19,
      "end": 29,
      "loc": {
        "start": {
          "line": 1,
          "column": 19
        },
        "end": {
          "line": 1,
          "column": 29
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 29,
      "end": 30,
      "loc": {
        "start": {
          "line": 1,
          "column": 29
        },
        "end": {
          "line": 1,
          "column": 30
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Returns a curried equivalent of the provided function. The arguments of curried function\n * needn't be provided one at a time. If `f` is a ternary function and `g` is `curry(f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @example\n *\n *      var addFourNumbers = (a, b, c, d) => a + b + c + d;\n *\n *      var curriedAddFourNumbers = curry(addFourNumbers);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n ",
      "start": 32,
      "end": 660,
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 23,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 661,
      "end": 667,
      "loc": {
        "start": {
          "line": 24,
          "column": 0
        },
        "end": {
          "line": 24,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "default",
        "keyword": "default",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "default",
      "start": 668,
      "end": 675,
      "loc": {
        "start": {
          "line": 24,
          "column": 7
        },
        "end": {
          "line": 24,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "fn",
      "start": 676,
      "end": 678,
      "loc": {
        "start": {
          "line": 24,
          "column": 15
        },
        "end": {
          "line": 24,
          "column": 17
        }
      }
    },
    {
      "type": {
        "label": "=>",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 679,
      "end": 681,
      "loc": {
        "start": {
          "line": 24,
          "column": 18
        },
        "end": {
          "line": 24,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "curryN",
      "start": 682,
      "end": 688,
      "loc": {
        "start": {
          "line": 24,
          "column": 21
        },
        "end": {
          "line": 24,
          "column": 27
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 688,
      "end": 689,
      "loc": {
        "start": {
          "line": 24,
          "column": 27
        },
        "end": {
          "line": 24,
          "column": 28
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "fn",
      "start": 689,
      "end": 691,
      "loc": {
        "start": {
          "line": 24,
          "column": 28
        },
        "end": {
          "line": 24,
          "column": 30
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 691,
      "end": 692,
      "loc": {
        "start": {
          "line": 24,
          "column": 30
        },
        "end": {
          "line": 24,
          "column": 31
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "length",
      "start": 692,
      "end": 698,
      "loc": {
        "start": {
          "line": 24,
          "column": 31
        },
        "end": {
          "line": 24,
          "column": 37
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 698,
      "end": 699,
      "loc": {
        "start": {
          "line": 24,
          "column": 37
        },
        "end": {
          "line": 24,
          "column": 38
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "fn",
      "start": 700,
      "end": 702,
      "loc": {
        "start": {
          "line": 24,
          "column": 39
        },
        "end": {
          "line": 24,
          "column": 41
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 702,
      "end": 703,
      "loc": {
        "start": {
          "line": 24,
          "column": 41
        },
        "end": {
          "line": 24,
          "column": 42
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 703,
      "end": 704,
      "loc": {
        "start": {
          "line": 24,
          "column": 42
        },
        "end": {
          "line": 24,
          "column": 43
        }
      }
    },
    {
      "type": {
        "label": "eof",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 705,
      "end": 705,
      "loc": {
        "start": {
          "line": 25,
          "column": 0
        },
        "end": {
          "line": 25,
          "column": 0
        }
      }
    }
  ]
}